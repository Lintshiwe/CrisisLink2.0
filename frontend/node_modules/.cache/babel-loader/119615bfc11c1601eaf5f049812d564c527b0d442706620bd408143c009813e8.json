{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ntoam\\\\Desktop\\\\Projects\\\\CrisisLink2.0\\\\frontend\\\\src\\\\contexts\\\\LocationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport LocationService from '../services/LocationService';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationContext = /*#__PURE__*/createContext();\nexport const useLocation = () => {\n  _s();\n  const context = useContext(LocationContext);\n  if (!context) {\n    throw new Error('useLocation must be used within a LocationProvider');\n  }\n  return context;\n};\n_s(useLocation, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const LocationProvider = ({\n  children\n}) => {\n  _s2();\n  const [location, setLocation] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [permissions, setPermissions] = useState('unknown');\n  const [isTracking, setIsTracking] = useState(false);\n  useEffect(() => {\n    // Check location permissions on mount\n    checkPermissions();\n  }, []);\n  const checkPermissions = async () => {\n    try {\n      const permission = await LocationService.checkPermissions();\n      setPermissions(permission);\n    } catch (error) {\n      console.error('Error checking permissions:', error);\n    }\n  };\n  const requestLocation = async () => {\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    try {\n      const position = await LocationService.getCurrentLocation();\n      setLocation(position);\n      setPermissions('granted');\n      toast.success('📍 Location access granted');\n      return position;\n    } catch (error) {\n      setError(error.message);\n      setPermissions('denied');\n      toast.error(`Location error: ${error.message}`);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const startTracking = callback => {\n    if (isTracking) return;\n    try {\n      LocationService.startTracking((newLocation, error) => {\n        if (error) {\n          setError(error.message);\n          toast.error(`Tracking error: ${error.message}`);\n          return;\n        }\n        setLocation(newLocation);\n        if (callback) callback(newLocation);\n      });\n      setIsTracking(true);\n      toast.success('📍 Location tracking started');\n    } catch (error) {\n      setError(error.message);\n      toast.error(`Failed to start tracking: ${error.message}`);\n    }\n  };\n  const stopTracking = () => {\n    if (!isTracking) return;\n    LocationService.stopAllTracking();\n    setIsTracking(false);\n    toast.success('📍 Location tracking stopped');\n  };\n  const updateLocation = async () => {\n    if (isLoading) return;\n    try {\n      setIsLoading(true);\n      const position = await LocationService.getCurrentLocation();\n      setLocation(position);\n      return position;\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getDistance = (targetLat, targetLng) => {\n    if (!location) return null;\n    return LocationService.calculateDistance(location.lat, location.lng, targetLat, targetLng);\n  };\n  const isWithinRadius = (targetLat, targetLng, radiusMeters) => {\n    if (!location) return false;\n    return LocationService.isWithinRadius(targetLat, targetLng, radiusMeters, location.lat, location.lng);\n  };\n  const formatCoordinates = (precision = 6) => {\n    if (!location) return null;\n    return LocationService.formatCoordinates(location.lat, location.lng, precision);\n  };\n  const reverseGeocode = async () => {\n    if (!location) throw new Error('No location available');\n    return LocationService.reverseGeocode(location.lat, location.lng);\n  };\n  const value = {\n    // State\n    location,\n    isLoading,\n    error,\n    permissions,\n    isTracking,\n    // Actions\n    requestLocation,\n    startTracking,\n    stopTracking,\n    updateLocation,\n    checkPermissions,\n    // Utilities\n    getDistance,\n    isWithinRadius,\n    formatCoordinates,\n    reverseGeocode,\n    // Service access\n    LocationService\n  };\n  return /*#__PURE__*/_jsxDEV(LocationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s2(LocationProvider, \"WUyM5jUOFiPwgB2kO4eoQa06aQ0=\");\n_c = LocationProvider;\nvar _c;\n$RefreshReg$(_c, \"LocationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","LocationService","toast","jsxDEV","_jsxDEV","LocationContext","useLocation","_s","context","Error","LocationProvider","children","_s2","location","setLocation","isLoading","setIsLoading","error","setError","permissions","setPermissions","isTracking","setIsTracking","checkPermissions","permission","console","requestLocation","position","getCurrentLocation","success","message","startTracking","callback","newLocation","stopTracking","stopAllTracking","updateLocation","getDistance","targetLat","targetLng","calculateDistance","lat","lng","isWithinRadius","radiusMeters","formatCoordinates","precision","reverseGeocode","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ntoam/Desktop/Projects/CrisisLink2.0/frontend/src/contexts/LocationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport LocationService from '../services/LocationService';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst LocationContext = createContext();\r\n\r\nexport const useLocation = () => {\r\n  const context = useContext(LocationContext);\r\n  if (!context) {\r\n    throw new Error('useLocation must be used within a LocationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const LocationProvider = ({ children }) => {\r\n  const [location, setLocation] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [permissions, setPermissions] = useState('unknown');\r\n  const [isTracking, setIsTracking] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check location permissions on mount\r\n    checkPermissions();\r\n  }, []);\r\n\r\n  const checkPermissions = async () => {\r\n    try {\r\n      const permission = await LocationService.checkPermissions();\r\n      setPermissions(permission);\r\n    } catch (error) {\r\n      console.error('Error checking permissions:', error);\r\n    }\r\n  };\r\n\r\n  const requestLocation = async () => {\r\n    if (isLoading) return;\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const position = await LocationService.getCurrentLocation();\r\n      setLocation(position);\r\n      setPermissions('granted');\r\n      toast.success('📍 Location access granted');\r\n      return position;\r\n    } catch (error) {\r\n      setError(error.message);\r\n      setPermissions('denied');\r\n      toast.error(`Location error: ${error.message}`);\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const startTracking = (callback) => {\r\n    if (isTracking) return;\r\n\r\n    try {\r\n      LocationService.startTracking((newLocation, error) => {\r\n        if (error) {\r\n          setError(error.message);\r\n          toast.error(`Tracking error: ${error.message}`);\r\n          return;\r\n        }\r\n\r\n        setLocation(newLocation);\r\n        if (callback) callback(newLocation);\r\n      });\r\n\r\n      setIsTracking(true);\r\n      toast.success('📍 Location tracking started');\r\n    } catch (error) {\r\n      setError(error.message);\r\n      toast.error(`Failed to start tracking: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const stopTracking = () => {\r\n    if (!isTracking) return;\r\n\r\n    LocationService.stopAllTracking();\r\n    setIsTracking(false);\r\n    toast.success('📍 Location tracking stopped');\r\n  };\r\n\r\n  const updateLocation = async () => {\r\n    if (isLoading) return;\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const position = await LocationService.getCurrentLocation();\r\n      setLocation(position);\r\n      return position;\r\n    } catch (error) {\r\n      setError(error.message);\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getDistance = (targetLat, targetLng) => {\r\n    if (!location) return null;\r\n    return LocationService.calculateDistance(\r\n      location.lat,\r\n      location.lng,\r\n      targetLat,\r\n      targetLng\r\n    );\r\n  };\r\n\r\n  const isWithinRadius = (targetLat, targetLng, radiusMeters) => {\r\n    if (!location) return false;\r\n    return LocationService.isWithinRadius(\r\n      targetLat,\r\n      targetLng,\r\n      radiusMeters,\r\n      location.lat,\r\n      location.lng\r\n    );\r\n  };\r\n\r\n  const formatCoordinates = (precision = 6) => {\r\n    if (!location) return null;\r\n    return LocationService.formatCoordinates(location.lat, location.lng, precision);\r\n  };\r\n\r\n  const reverseGeocode = async () => {\r\n    if (!location) throw new Error('No location available');\r\n    return LocationService.reverseGeocode(location.lat, location.lng);\r\n  };\r\n\r\n  const value = {\r\n    // State\r\n    location,\r\n    isLoading,\r\n    error,\r\n    permissions,\r\n    isTracking,\r\n    \r\n    // Actions\r\n    requestLocation,\r\n    startTracking,\r\n    stopTracking,\r\n    updateLocation,\r\n    checkPermissions,\r\n    \r\n    // Utilities\r\n    getDistance,\r\n    isWithinRadius,\r\n    formatCoordinates,\r\n    reverseGeocode,\r\n    \r\n    // Service access\r\n    LocationService\r\n  };\r\n\r\n  return (\r\n    <LocationContext.Provider value={value}>\r\n      {children}\r\n    </LocationContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}