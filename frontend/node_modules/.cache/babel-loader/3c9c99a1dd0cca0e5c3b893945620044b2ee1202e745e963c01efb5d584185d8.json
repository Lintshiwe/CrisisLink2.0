{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ntoam\\\\Desktop\\\\Projects\\\\CrisisLink2.0\\\\frontend\\\\src\\\\components\\\\LiveTrackingMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow, DirectionsRenderer, TrafficLayer, Circle, Polyline } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: '100%',\n  height: '400px',\n  borderRadius: '12px',\n  border: '2px solid #e5e7eb'\n};\nconst defaultCenter = {\n  lat: -26.2041,\n  // Johannesburg, South Africa\n  lng: 28.0473\n};\n\n// Google APIs to load\nconst libraries = ['places', 'geometry', 'directions', 'visualization'];\nconst mapOptions = {\n  disableDefaultUI: false,\n  zoomControl: true,\n  streetViewControl: false,\n  mapTypeControl: true,\n  fullscreenControl: true,\n  trafficLayer: true,\n  styles: [{\n    featureType: 'poi',\n    elementType: 'labels',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'road',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#f5f5f5'\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#dadada'\n    }]\n  }]\n};\nconst LiveTrackingMap = ({\n  userLocation,\n  agentLocation,\n  sosAlert,\n  className = '',\n  showDirections = true,\n  showTraffic = true,\n  showGeofence = true,\n  onMapLoad,\n  onRouteUpdate,\n  agents = []\n}) => {\n  _s();\n  var _window$google, _window$google3, _directions$routes$, _directions$routes$$l, _directions$routes$$l2, _directions$routes$2, _directions$routes$2$, _directions$routes$2$2, _directions$routes$3, _directions$routes$3$, _directions$routes$3$2;\n  const [map, setMap] = useState(null);\n  const [directions, setDirections] = useState(null);\n  const [alternativeRoutes, setAlternativeRoutes] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [trafficLayer, setTrafficLayer] = useState(null);\n  const [routeHistory, setRouteHistory] = useState([]);\n  const [weatherOverlay, setWeatherOverlay] = useState(null);\n  const [emergencyRadius, setEmergencyRadius] = useState(100); // meters\n\n  // Enhanced routing with multiple options and real-time updates\n  const calculateAdvancedRouting = useCallback(async (origin, destination) => {\n    if (!window.google || !origin || !destination) return null;\n    const directionsService = new window.google.maps.DirectionsService();\n    try {\n      // Get multiple route options\n      const requests = [{\n        origin: origin,\n        destination: destination,\n        travelMode: window.google.maps.TravelMode.DRIVING,\n        drivingOptions: {\n          departureTime: new Date(),\n          trafficModel: window.google.maps.TrafficModel.BEST_GUESS\n        },\n        provideRouteAlternatives: true,\n        avoidHighways: false,\n        avoidTolls: false,\n        optimizeWaypoints: true\n      }];\n      const results = await Promise.all(requests.map(request => new Promise((resolve, reject) => {\n        directionsService.route(request, (result, status) => {\n          if (status === 'OK') {\n            resolve(result);\n          } else {\n            reject(new Error(`Directions request failed: ${status}`));\n          }\n        });\n      })));\n      const mainResult = results[0];\n      setDirections(mainResult);\n\n      // Process all routes\n      const allRoutes = mainResult.routes.map((route, index) => {\n        const leg = route.legs[0];\n        return {\n          index,\n          distance: leg.distance,\n          duration: leg.duration,\n          duration_in_traffic: leg.duration_in_traffic || leg.duration,\n          start_address: leg.start_address,\n          end_address: leg.end_address,\n          steps: leg.steps,\n          route: route\n        };\n      });\n\n      // Select fastest route considering traffic\n      const fastestRoute = allRoutes.reduce((fastest, current) => {\n        var _fastest$duration_in_, _current$duration_in_;\n        const fastestTime = ((_fastest$duration_in_ = fastest.duration_in_traffic) === null || _fastest$duration_in_ === void 0 ? void 0 : _fastest$duration_in_.value) || fastest.duration.value;\n        const currentTime = ((_current$duration_in_ = current.duration_in_traffic) === null || _current$duration_in_ === void 0 ? void 0 : _current$duration_in_.value) || current.duration.value;\n        return currentTime < fastestTime ? current : fastest;\n      });\n      setAlternativeRoutes(allRoutes);\n\n      // Get traffic conditions and update everything\n      const trafficData = await getTrafficConditions(origin, destination);\n\n      // Update route history for pattern analysis\n      setRouteHistory(prev => [...prev.slice(-10), {\n        timestamp: new Date(),\n        route: fastestRoute,\n        traffic_conditions: trafficData\n      }]);\n\n      // Dispatch comprehensive route info\n      if (onMapLoad) {\n        var _fastestRoute$duratio, _fastestRoute$duratio2;\n        onMapLoad({\n          distance: fastestRoute.distance.text,\n          duration: fastestRoute.duration.text,\n          duration_in_traffic: ((_fastestRoute$duratio = fastestRoute.duration_in_traffic) === null || _fastestRoute$duratio === void 0 ? void 0 : _fastestRoute$duratio.text) || fastestRoute.duration.text,\n          eta: new Date(Date.now() + (((_fastestRoute$duratio2 = fastestRoute.duration_in_traffic) === null || _fastestRoute$duratio2 === void 0 ? void 0 : _fastestRoute$duratio2.value) || fastestRoute.duration.value) * 1000),\n          alternative_routes: allRoutes.length,\n          traffic_delay: fastestRoute.duration_in_traffic ? (fastestRoute.duration_in_traffic.value - fastestRoute.duration.value) / 60 : 0,\n          route_quality: calculateRouteQuality(fastestRoute)\n        });\n      }\n      if (onRouteUpdate) {\n        onRouteUpdate({\n          main_route: fastestRoute,\n          alternatives: allRoutes,\n          traffic_data: trafficData\n        });\n      }\n    } catch (error) {\n      console.error('Advanced routing error:', error);\n      // Fallback to basic routing\n      calculateBasicETA(origin, destination);\n    }\n  }, [onMapLoad, onRouteUpdate]);\n\n  // Fallback basic routing\n  const calculateBasicETA = useCallback((origin, destination) => {\n    const directionsService = new window.google.maps.DirectionsService();\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: window.google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      if (status === 'OK') {\n        setDirections(result);\n        const route = result.routes[0];\n        const leg = route.legs[0];\n        if (onMapLoad) {\n          onMapLoad({\n            distance: leg.distance.text,\n            duration: leg.duration.text,\n            eta: new Date(Date.now() + leg.duration.value * 1000)\n          });\n        }\n      }\n    });\n  }, [onMapLoad]);\n\n  // Get real-time traffic conditions\n  const getTrafficConditions = async (origin, destination) => {\n    try {\n      const distanceService = new window.google.maps.DistanceMatrixService();\n      return new Promise(resolve => {\n        distanceService.getDistanceMatrix({\n          origins: [origin],\n          destinations: [destination],\n          travelMode: window.google.maps.TravelMode.DRIVING,\n          drivingOptions: {\n            departureTime: new Date(),\n            trafficModel: window.google.maps.TrafficModel.BEST_GUESS\n          },\n          avoidHighways: false,\n          avoidTolls: false\n        }, (response, status) => {\n          if (status === 'OK') {\n            var _response$rows$;\n            const element = (_response$rows$ = response.rows[0]) === null || _response$rows$ === void 0 ? void 0 : _response$rows$.elements[0];\n            if ((element === null || element === void 0 ? void 0 : element.status) === 'OK') {\n              resolve({\n                distance: element.distance,\n                duration: element.duration,\n                duration_in_traffic: element.duration_in_traffic,\n                traffic_delay_seconds: element.duration_in_traffic ? element.duration_in_traffic.value - element.duration.value : 0\n              });\n            }\n          }\n          resolve(null);\n        });\n      });\n    } catch (error) {\n      console.error('Traffic conditions error:', error);\n      return null;\n    }\n  };\n\n  // Calculate route quality score\n  const calculateRouteQuality = route => {\n    let score = 100;\n\n    // Penalize for traffic delays\n    if (route.duration_in_traffic && route.duration) {\n      const delay = (route.duration_in_traffic.value - route.duration.value) / 60;\n      score -= Math.min(delay * 2, 30); // Max 30 point penalty\n    }\n\n    // Penalize for longer distances\n    const distance = route.distance.value / 1000; // km\n    if (distance > 20) score -= (distance - 20) * 0.5;\n    return Math.max(score, 0);\n  };\n\n  // Update directions when locations change with real-time routing\n  useEffect(() => {\n    if (isLoaded && userLocation && agentLocation && showDirections) {\n      calculateAdvancedRouting(agentLocation, userLocation);\n    }\n  }, [userLocation, agentLocation, showDirections, isLoaded, calculateAdvancedRouting]);\n\n  // Set up real-time route updates every 2 minutes\n  useEffect(() => {\n    if (isLoaded && userLocation && agentLocation && showDirections) {\n      const routeUpdateInterval = setInterval(() => {\n        calculateAdvancedRouting(agentLocation, userLocation);\n      }, 120000); // 2 minutes\n\n      return () => clearInterval(routeUpdateInterval);\n    }\n  }, [userLocation, agentLocation, showDirections, isLoaded, calculateAdvancedRouting]);\n\n  // Initialize traffic layer\n  useEffect(() => {\n    if (map && showTraffic && !trafficLayer) {\n      const traffic = new window.google.maps.TrafficLayer();\n      traffic.setMap(map);\n      setTrafficLayer(traffic);\n    }\n    return () => {\n      if (trafficLayer) {\n        trafficLayer.setMap(null);\n      }\n    };\n  }, [map, showTraffic, trafficLayer]);\n  const onLoad = useCallback(map => {\n    setMap(map);\n    setIsLoaded(true);\n\n    // Fit bounds to show both user and agent\n    if (userLocation && agentLocation) {\n      const bounds = new window.google.maps.LatLngBounds();\n      bounds.extend(userLocation);\n      bounds.extend(agentLocation);\n      map.fitBounds(bounds);\n    }\n  }, [userLocation, agentLocation]);\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, []);\n\n  // Get marker icon based on agent status\n  const getAgentIcon = agent => {\n    const baseUrl = 'data:image/svg+xml;base64,';\n    let color = '#10b981'; // green for available\n\n    if (agent.status === 'busy') color = '#f59e0b'; // amber\n    if (agent.status === 'offline') color = '#6b7280'; // gray\n    if (agent.id === (sosAlert === null || sosAlert === void 0 ? void 0 : sosAlert.assigned_agent_id)) color = '#ef4444'; // red for assigned\n\n    const svg = `\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\n        <path d=\"M12 6v12M6 12h12\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n      </svg>\n    `;\n    return {\n      url: baseUrl + btoa(svg),\n      scaledSize: new window.google.maps.Size(32, 32),\n      anchor: new window.google.maps.Point(16, 16)\n    };\n  };\n\n  // User location icon (red SOS marker)\n  const userIcon = {\n    url: 'data:image/svg+xml;base64,' + btoa(`\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"#ef4444\" stroke=\"white\" stroke-width=\"3\"/>\n        <text x=\"16\" y=\"20\" text-anchor=\"middle\" fill=\"white\" font-size=\"12\" font-weight=\"bold\">SOS</text>\n      </svg>\n    `),\n    scaledSize: new window.google.maps.Size(32, 32),\n    anchor: new window.google.maps.Point(16, 16)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      libraries: libraries,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        zoom: 13,\n        center: userLocation || agentLocation || defaultCenter,\n        options: mapOptions,\n        onLoad: onLoad,\n        onUnmount: onUnmount,\n        children: [userLocation && showGeofence && /*#__PURE__*/_jsxDEV(Circle, {\n          center: userLocation,\n          radius: emergencyRadius,\n          options: {\n            fillColor: '#ef4444',\n            fillOpacity: 0.1,\n            strokeColor: '#ef4444',\n            strokeOpacity: 0.5,\n            strokeWeight: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: userLocation,\n          icon: userIcon,\n          title: \"Your Location (SOS Alert)\",\n          zIndex: 1000,\n          animation: (_window$google = window.google) === null || _window$google === void 0 ? void 0 : _window$google.maps.Animation.DROP\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), agents.map((agent, index) => {\n          var _window$google2;\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: parseFloat(agent.current_lat),\n              lng: parseFloat(agent.current_lng)\n            },\n            icon: getAgentIcon(agent),\n            title: `Agent ${agent.name} - ${agent.status}`,\n            onClick: () => setSelectedAgent(agent),\n            zIndex: agent.id === (sosAlert === null || sosAlert === void 0 ? void 0 : sosAlert.assigned_agent_id) ? 999 : 100,\n            animation: agent.id === (sosAlert === null || sosAlert === void 0 ? void 0 : sosAlert.assigned_agent_id) ? (_window$google2 = window.google) === null || _window$google2 === void 0 ? void 0 : _window$google2.maps.Animation.BOUNCE : null\n          }, agent.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this);\n        }), routeHistory.length > 1 && /*#__PURE__*/_jsxDEV(Polyline, {\n          path: routeHistory.map(entry => {\n            var _entry$route$start_lo, _entry$route$start_lo2;\n            return {\n              lat: ((_entry$route$start_lo = entry.route.start_location) === null || _entry$route$start_lo === void 0 ? void 0 : _entry$route$start_lo.lat) || (agentLocation === null || agentLocation === void 0 ? void 0 : agentLocation.lat),\n              lng: ((_entry$route$start_lo2 = entry.route.start_location) === null || _entry$route$start_lo2 === void 0 ? void 0 : _entry$route$start_lo2.lng) || (agentLocation === null || agentLocation === void 0 ? void 0 : agentLocation.lng)\n            };\n          }).filter(point => point.lat && point.lng),\n          options: {\n            strokeColor: '#10b981',\n            strokeOpacity: 0.6,\n            strokeWeight: 2,\n            icons: [{\n              icon: {\n                path: (_window$google3 = window.google) === null || _window$google3 === void 0 ? void 0 : _window$google3.maps.SymbolPath.FORWARD_CLOSED_ARROW,\n                scale: 2,\n                strokeColor: '#10b981'\n              },\n              offset: '100%'\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this), selectedAgent && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: {\n            lat: parseFloat(selectedAgent.current_lat),\n            lng: parseFloat(selectedAgent.current_lng)\n          },\n          onCloseClick: () => setSelectedAgent(null),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 min-w-64\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-bold text-sm\",\n                children: [\"Agent \", selectedAgent.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-2 py-1 rounded-full text-xs font-medium ${selectedAgent.status === 'available' ? 'bg-green-100 text-green-800' : selectedAgent.status === 'busy' ? 'bg-yellow-100 text-yellow-800' : 'bg-gray-100 text-gray-800'}`,\n                children: selectedAgent.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1 text-xs text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Badge:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 22\n                }, this), \" \", selectedAgent.badge_number]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Phone:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 22\n                }, this), \" \", selectedAgent.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Vehicle:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 22\n                }, this), \" \", selectedAgent.vehicle_info || 'Not specified']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this), selectedAgent.id === (sosAlert === null || sosAlert === void 0 ? void 0 : sosAlert.assigned_agent_id) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 p-2 bg-red-50 rounded border-l-4 border-red-400\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-red-700 font-bold text-xs\",\n                  children: \"\\uD83D\\uDEA8 Assigned to your SOS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 23\n                }, this), directions && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-1 text-xs\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Distance: \", (_directions$routes$ = directions.routes[0]) === null || _directions$routes$ === void 0 ? void 0 : (_directions$routes$$l = _directions$routes$.legs[0]) === null || _directions$routes$$l === void 0 ? void 0 : (_directions$routes$$l2 = _directions$routes$$l.distance) === null || _directions$routes$$l2 === void 0 ? void 0 : _directions$routes$$l2.text]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"ETA: \", ((_directions$routes$2 = directions.routes[0]) === null || _directions$routes$2 === void 0 ? void 0 : (_directions$routes$2$ = _directions$routes$2.legs[0]) === null || _directions$routes$2$ === void 0 ? void 0 : (_directions$routes$2$2 = _directions$routes$2$.duration_in_traffic) === null || _directions$routes$2$2 === void 0 ? void 0 : _directions$routes$2$2.text) || ((_directions$routes$3 = directions.routes[0]) === null || _directions$routes$3 === void 0 ? void 0 : (_directions$routes$3$ = _directions$routes$3.legs[0]) === null || _directions$routes$3$ === void 0 ? void 0 : (_directions$routes$3$2 = _directions$routes$3$.duration) === null || _directions$routes$3$2 === void 0 ? void 0 : _directions$routes$3$2.text)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), directions && showDirections && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n          directions: directions,\n          routeIndex: 0,\n          options: {\n            polylineOptions: {\n              strokeColor: '#ef4444',\n              strokeWeight: 6,\n              strokeOpacity: 0.8\n            },\n            suppressMarkers: true,\n            preserveViewport: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), alternativeRoutes.slice(1).map((route, index) => /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n          directions: {\n            ...directions,\n            routes: [route.route]\n          },\n          options: {\n            polylineOptions: {\n              strokeColor: '#6b7280',\n              strokeWeight: 3,\n              strokeOpacity: 0.5\n            },\n            suppressMarkers: true,\n            preserveViewport: true\n          }\n        }, `alt-route-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this)), showTraffic && /*#__PURE__*/_jsxDEV(TrafficLayer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-2 right-2 bg-white p-2 rounded-lg shadow-lg text-xs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-1 mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 bg-red-500 rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Your Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-1 mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 bg-green-500 rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Available Agent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-1 mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 bg-amber-500 rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Busy Agent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 bg-red-500 rounded-full border-2 border-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Assigned Agent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this), !isLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-gray-100 rounded-lg flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-red-600 mx-auto mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: \"Loading map...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveTrackingMap, \"jfe/cfQGoLwxcc1a1q+Mmrpv+Z8=\");\n_c = LiveTrackingMap;\nexport default LiveTrackingMap;\nvar _c;\n$RefreshReg$(_c, \"LiveTrackingMap\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","GoogleMap","LoadScript","Marker","InfoWindow","DirectionsRenderer","TrafficLayer","Circle","Polyline","jsxDEV","_jsxDEV","mapContainerStyle","width","height","borderRadius","border","defaultCenter","lat","lng","libraries","mapOptions","disableDefaultUI","zoomControl","streetViewControl","mapTypeControl","fullscreenControl","trafficLayer","styles","featureType","elementType","stylers","visibility","color","LiveTrackingMap","userLocation","agentLocation","sosAlert","className","showDirections","showTraffic","showGeofence","onMapLoad","onRouteUpdate","agents","_s","_window$google","_window$google3","_directions$routes$","_directions$routes$$l","_directions$routes$$l2","_directions$routes$2","_directions$routes$2$","_directions$routes$2$2","_directions$routes$3","_directions$routes$3$","_directions$routes$3$2","map","setMap","directions","setDirections","alternativeRoutes","setAlternativeRoutes","selectedAgent","setSelectedAgent","isLoaded","setIsLoaded","setTrafficLayer","routeHistory","setRouteHistory","weatherOverlay","setWeatherOverlay","emergencyRadius","setEmergencyRadius","calculateAdvancedRouting","origin","destination","window","google","directionsService","maps","DirectionsService","requests","travelMode","TravelMode","DRIVING","drivingOptions","departureTime","Date","trafficModel","TrafficModel","BEST_GUESS","provideRouteAlternatives","avoidHighways","avoidTolls","optimizeWaypoints","results","Promise","all","request","resolve","reject","route","result","status","Error","mainResult","allRoutes","routes","index","leg","legs","distance","duration","duration_in_traffic","start_address","end_address","steps","fastestRoute","reduce","fastest","current","_fastest$duration_in_","_current$duration_in_","fastestTime","value","currentTime","trafficData","getTrafficConditions","prev","slice","timestamp","traffic_conditions","_fastestRoute$duratio","_fastestRoute$duratio2","text","eta","now","alternative_routes","length","traffic_delay","route_quality","calculateRouteQuality","main_route","alternatives","traffic_data","error","console","calculateBasicETA","distanceService","DistanceMatrixService","getDistanceMatrix","origins","destinations","response","_response$rows$","element","rows","elements","traffic_delay_seconds","score","delay","Math","min","max","routeUpdateInterval","setInterval","clearInterval","traffic","onLoad","bounds","LatLngBounds","extend","fitBounds","onUnmount","getAgentIcon","agent","baseUrl","id","assigned_agent_id","svg","url","btoa","scaledSize","Size","anchor","Point","userIcon","children","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","zoom","center","options","radius","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","fileName","_jsxFileName","lineNumber","columnNumber","position","icon","title","zIndex","animation","Animation","DROP","_window$google2","parseFloat","current_lat","current_lng","name","onClick","BOUNCE","path","entry","_entry$route$start_lo","_entry$route$start_lo2","start_location","filter","point","icons","SymbolPath","FORWARD_CLOSED_ARROW","scale","offset","onCloseClick","badge_number","phone","vehicle_info","routeIndex","polylineOptions","suppressMarkers","preserveViewport","_c","$RefreshReg$"],"sources":["C:/Users/ntoam/Desktop/Projects/CrisisLink2.0/frontend/src/components/LiveTrackingMap.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { \r\n  GoogleMap, \r\n  LoadScript, \r\n  Marker, \r\n  InfoWindow, \r\n  DirectionsRenderer,\r\n  TrafficLayer,\r\n  Circle,\r\n  Polyline\r\n} from '@react-google-maps/api';\r\n\r\nconst mapContainerStyle = {\r\n  width: '100%',\r\n  height: '400px',\r\n  borderRadius: '12px',\r\n  border: '2px solid #e5e7eb'\r\n};\r\n\r\nconst defaultCenter = {\r\n  lat: -26.2041, // Johannesburg, South Africa\r\n  lng: 28.0473\r\n};\r\n\r\n// Google APIs to load\r\nconst libraries = ['places', 'geometry', 'directions', 'visualization'];\r\n\r\nconst mapOptions = {\r\n  disableDefaultUI: false,\r\n  zoomControl: true,\r\n  streetViewControl: false,\r\n  mapTypeControl: true,\r\n  fullscreenControl: true,\r\n  trafficLayer: true,\r\n  styles: [\r\n    {\r\n      featureType: 'poi',\r\n      elementType: 'labels',\r\n      stylers: [{ visibility: 'off' }]\r\n    },\r\n    {\r\n      featureType: 'road',\r\n      elementType: 'geometry',\r\n      stylers: [{ color: '#f5f5f5' }]\r\n    },\r\n    {\r\n      featureType: 'road.highway',\r\n      elementType: 'geometry',\r\n      stylers: [{ color: '#dadada' }]\r\n    }\r\n  ]\r\n};\r\n\r\nconst LiveTrackingMap = ({ \r\n  userLocation, \r\n  agentLocation, \r\n  sosAlert, \r\n  className = '',\r\n  showDirections = true,\r\n  showTraffic = true,\r\n  showGeofence = true,\r\n  onMapLoad,\r\n  onRouteUpdate,\r\n  agents = []\r\n}) => {\r\n  const [map, setMap] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [alternativeRoutes, setAlternativeRoutes] = useState([]);\r\n  const [selectedAgent, setSelectedAgent] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [trafficLayer, setTrafficLayer] = useState(null);\r\n  const [routeHistory, setRouteHistory] = useState([]);\r\n  const [weatherOverlay, setWeatherOverlay] = useState(null);\r\n  const [emergencyRadius, setEmergencyRadius] = useState(100); // meters\r\n\r\n  // Enhanced routing with multiple options and real-time updates\r\n  const calculateAdvancedRouting = useCallback(async (origin, destination) => {\r\n    if (!window.google || !origin || !destination) return null;\r\n\r\n    const directionsService = new window.google.maps.DirectionsService();\r\n    \r\n    try {\r\n      // Get multiple route options\r\n      const requests = [\r\n        {\r\n          origin: origin,\r\n          destination: destination,\r\n          travelMode: window.google.maps.TravelMode.DRIVING,\r\n          drivingOptions: {\r\n            departureTime: new Date(),\r\n            trafficModel: window.google.maps.TrafficModel.BEST_GUESS\r\n          },\r\n          provideRouteAlternatives: true,\r\n          avoidHighways: false,\r\n          avoidTolls: false,\r\n          optimizeWaypoints: true\r\n        }\r\n      ];\r\n\r\n      const results = await Promise.all(\r\n        requests.map(request => \r\n          new Promise((resolve, reject) => {\r\n            directionsService.route(request, (result, status) => {\r\n              if (status === 'OK') {\r\n                resolve(result);\r\n              } else {\r\n                reject(new Error(`Directions request failed: ${status}`));\r\n              }\r\n            });\r\n          })\r\n        )\r\n      );\r\n\r\n      const mainResult = results[0];\r\n      setDirections(mainResult);\r\n\r\n      // Process all routes\r\n      const allRoutes = mainResult.routes.map((route, index) => {\r\n        const leg = route.legs[0];\r\n        return {\r\n          index,\r\n          distance: leg.distance,\r\n          duration: leg.duration,\r\n          duration_in_traffic: leg.duration_in_traffic || leg.duration,\r\n          start_address: leg.start_address,\r\n          end_address: leg.end_address,\r\n          steps: leg.steps,\r\n          route: route\r\n        };\r\n      });\r\n\r\n      // Select fastest route considering traffic\r\n      const fastestRoute = allRoutes.reduce((fastest, current) => {\r\n        const fastestTime = fastest.duration_in_traffic?.value || fastest.duration.value;\r\n        const currentTime = current.duration_in_traffic?.value || current.duration.value;\r\n        return currentTime < fastestTime ? current : fastest;\r\n      });\r\n\r\n      setAlternativeRoutes(allRoutes);\r\n\r\n      // Get traffic conditions and update everything\r\n      const trafficData = await getTrafficConditions(origin, destination);\r\n      \r\n      // Update route history for pattern analysis\r\n      setRouteHistory(prev => [...prev.slice(-10), {\r\n        timestamp: new Date(),\r\n        route: fastestRoute,\r\n        traffic_conditions: trafficData\r\n      }]);\r\n\r\n      // Dispatch comprehensive route info\r\n      if (onMapLoad) {\r\n        onMapLoad({\r\n          distance: fastestRoute.distance.text,\r\n          duration: fastestRoute.duration.text,\r\n          duration_in_traffic: fastestRoute.duration_in_traffic?.text || fastestRoute.duration.text,\r\n          eta: new Date(Date.now() + (fastestRoute.duration_in_traffic?.value || fastestRoute.duration.value) * 1000),\r\n          alternative_routes: allRoutes.length,\r\n          traffic_delay: fastestRoute.duration_in_traffic ? \r\n            (fastestRoute.duration_in_traffic.value - fastestRoute.duration.value) / 60 : 0,\r\n          route_quality: calculateRouteQuality(fastestRoute)\r\n        });\r\n      }\r\n\r\n      if (onRouteUpdate) {\r\n        onRouteUpdate({\r\n          main_route: fastestRoute,\r\n          alternatives: allRoutes,\r\n          traffic_data: trafficData\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Advanced routing error:', error);\r\n      // Fallback to basic routing\r\n      calculateBasicETA(origin, destination);\r\n    }\r\n  }, [onMapLoad, onRouteUpdate]);\r\n\r\n  // Fallback basic routing\r\n  const calculateBasicETA = useCallback((origin, destination) => {\r\n    const directionsService = new window.google.maps.DirectionsService();\r\n    \r\n    directionsService.route({\r\n      origin: origin,\r\n      destination: destination,\r\n      travelMode: window.google.maps.TravelMode.DRIVING,\r\n    }, (result, status) => {\r\n      if (status === 'OK') {\r\n        setDirections(result);\r\n        const route = result.routes[0];\r\n        const leg = route.legs[0];\r\n        \r\n        if (onMapLoad) {\r\n          onMapLoad({\r\n            distance: leg.distance.text,\r\n            duration: leg.duration.text,\r\n            eta: new Date(Date.now() + leg.duration.value * 1000)\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }, [onMapLoad]);\r\n\r\n  // Get real-time traffic conditions\r\n  const getTrafficConditions = async (origin, destination) => {\r\n    try {\r\n      const distanceService = new window.google.maps.DistanceMatrixService();\r\n      \r\n      return new Promise((resolve) => {\r\n        distanceService.getDistanceMatrix({\r\n          origins: [origin],\r\n          destinations: [destination],\r\n          travelMode: window.google.maps.TravelMode.DRIVING,\r\n          drivingOptions: {\r\n            departureTime: new Date(),\r\n            trafficModel: window.google.maps.TrafficModel.BEST_GUESS\r\n          },\r\n          avoidHighways: false,\r\n          avoidTolls: false,\r\n        }, (response, status) => {\r\n          if (status === 'OK') {\r\n            const element = response.rows[0]?.elements[0];\r\n            if (element?.status === 'OK') {\r\n              resolve({\r\n                distance: element.distance,\r\n                duration: element.duration,\r\n                duration_in_traffic: element.duration_in_traffic,\r\n                traffic_delay_seconds: element.duration_in_traffic ? \r\n                  element.duration_in_traffic.value - element.duration.value : 0\r\n              });\r\n            }\r\n          }\r\n          resolve(null);\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.error('Traffic conditions error:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Calculate route quality score\r\n  const calculateRouteQuality = (route) => {\r\n    let score = 100;\r\n    \r\n    // Penalize for traffic delays\r\n    if (route.duration_in_traffic && route.duration) {\r\n      const delay = (route.duration_in_traffic.value - route.duration.value) / 60;\r\n      score -= Math.min(delay * 2, 30); // Max 30 point penalty\r\n    }\r\n    \r\n    // Penalize for longer distances\r\n    const distance = route.distance.value / 1000; // km\r\n    if (distance > 20) score -= (distance - 20) * 0.5;\r\n    \r\n    return Math.max(score, 0);\r\n  };\r\n\r\n  // Update directions when locations change with real-time routing\r\n  useEffect(() => {\r\n    if (isLoaded && userLocation && agentLocation && showDirections) {\r\n      calculateAdvancedRouting(agentLocation, userLocation);\r\n    }\r\n  }, [userLocation, agentLocation, showDirections, isLoaded, calculateAdvancedRouting]);\r\n\r\n  // Set up real-time route updates every 2 minutes\r\n  useEffect(() => {\r\n    if (isLoaded && userLocation && agentLocation && showDirections) {\r\n      const routeUpdateInterval = setInterval(() => {\r\n        calculateAdvancedRouting(agentLocation, userLocation);\r\n      }, 120000); // 2 minutes\r\n\r\n      return () => clearInterval(routeUpdateInterval);\r\n    }\r\n  }, [userLocation, agentLocation, showDirections, isLoaded, calculateAdvancedRouting]);\r\n\r\n  // Initialize traffic layer\r\n  useEffect(() => {\r\n    if (map && showTraffic && !trafficLayer) {\r\n      const traffic = new window.google.maps.TrafficLayer();\r\n      traffic.setMap(map);\r\n      setTrafficLayer(traffic);\r\n    }\r\n    \r\n    return () => {\r\n      if (trafficLayer) {\r\n        trafficLayer.setMap(null);\r\n      }\r\n    };\r\n  }, [map, showTraffic, trafficLayer]);\r\n\r\n  const onLoad = useCallback((map) => {\r\n    setMap(map);\r\n    setIsLoaded(true);\r\n    \r\n    // Fit bounds to show both user and agent\r\n    if (userLocation && agentLocation) {\r\n      const bounds = new window.google.maps.LatLngBounds();\r\n      bounds.extend(userLocation);\r\n      bounds.extend(agentLocation);\r\n      map.fitBounds(bounds);\r\n    }\r\n  }, [userLocation, agentLocation]);\r\n\r\n  const onUnmount = useCallback(() => {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  // Get marker icon based on agent status\r\n  const getAgentIcon = (agent) => {\r\n    const baseUrl = 'data:image/svg+xml;base64,';\r\n    let color = '#10b981'; // green for available\r\n    \r\n    if (agent.status === 'busy') color = '#f59e0b'; // amber\r\n    if (agent.status === 'offline') color = '#6b7280'; // gray\r\n    if (agent.id === sosAlert?.assigned_agent_id) color = '#ef4444'; // red for assigned\r\n    \r\n    const svg = `\r\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <path d=\"M12 6v12M6 12h12\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\"/>\r\n      </svg>\r\n    `;\r\n    \r\n    return {\r\n      url: baseUrl + btoa(svg),\r\n      scaledSize: new window.google.maps.Size(32, 32),\r\n      anchor: new window.google.maps.Point(16, 16)\r\n    };\r\n  };\r\n\r\n  // User location icon (red SOS marker)\r\n  const userIcon = {\r\n    url: 'data:image/svg+xml;base64,' + btoa(`\r\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"#ef4444\" stroke=\"white\" stroke-width=\"3\"/>\r\n        <text x=\"16\" y=\"20\" text-anchor=\"middle\" fill=\"white\" font-size=\"12\" font-weight=\"bold\">SOS</text>\r\n      </svg>\r\n    `),\r\n    scaledSize: new window.google.maps.Size(32, 32),\r\n    anchor: new window.google.maps.Point(16, 16)\r\n  };\r\n\r\n  return (\r\n    <div className={`relative ${className}`}>\r\n      <LoadScript\r\n        googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}\r\n        libraries={libraries}\r\n      >\r\n        <GoogleMap\r\n          mapContainerStyle={mapContainerStyle}\r\n          zoom={13}\r\n          center={userLocation || agentLocation || defaultCenter}\r\n          options={mapOptions}\r\n          onLoad={onLoad}\r\n          onUnmount={onUnmount}\r\n        >\r\n          {/* Emergency radius geofence */}\r\n          {userLocation && showGeofence && (\r\n            <Circle\r\n              center={userLocation}\r\n              radius={emergencyRadius}\r\n              options={{\r\n                fillColor: '#ef4444',\r\n                fillOpacity: 0.1,\r\n                strokeColor: '#ef4444',\r\n                strokeOpacity: 0.5,\r\n                strokeWeight: 2,\r\n              }}\r\n            />\r\n          )}\r\n\r\n          {/* User location marker */}\r\n          {userLocation && (\r\n            <Marker\r\n              position={userLocation}\r\n              icon={userIcon}\r\n              title=\"Your Location (SOS Alert)\"\r\n              zIndex={1000}\r\n              animation={window.google?.maps.Animation.DROP}\r\n            />\r\n          )}\r\n\r\n          {/* Agent markers with enhanced info */}\r\n          {agents.map((agent, index) => (\r\n            <Marker\r\n              key={agent.id}\r\n              position={{\r\n                lat: parseFloat(agent.current_lat),\r\n                lng: parseFloat(agent.current_lng)\r\n              }}\r\n              icon={getAgentIcon(agent)}\r\n              title={`Agent ${agent.name} - ${agent.status}`}\r\n              onClick={() => setSelectedAgent(agent)}\r\n              zIndex={agent.id === sosAlert?.assigned_agent_id ? 999 : 100}\r\n              animation={agent.id === sosAlert?.assigned_agent_id ? \r\n                window.google?.maps.Animation.BOUNCE : null}\r\n            />\r\n          ))}\r\n\r\n          {/* Route history visualization */}\r\n          {routeHistory.length > 1 && (\r\n            <Polyline\r\n              path={routeHistory.map(entry => ({\r\n                lat: entry.route.start_location?.lat || agentLocation?.lat,\r\n                lng: entry.route.start_location?.lng || agentLocation?.lng\r\n              })).filter(point => point.lat && point.lng)}\r\n              options={{\r\n                strokeColor: '#10b981',\r\n                strokeOpacity: 0.6,\r\n                strokeWeight: 2,\r\n                icons: [\r\n                  {\r\n                    icon: {\r\n                      path: window.google?.maps.SymbolPath.FORWARD_CLOSED_ARROW,\r\n                      scale: 2,\r\n                      strokeColor: '#10b981'\r\n                    },\r\n                    offset: '100%'\r\n                  }\r\n                ]\r\n              }}\r\n            />\r\n          )}\r\n\r\n          {/* Enhanced agent info window */}\r\n          {selectedAgent && (\r\n            <InfoWindow\r\n              position={{\r\n                lat: parseFloat(selectedAgent.current_lat),\r\n                lng: parseFloat(selectedAgent.current_lng)\r\n              }}\r\n              onCloseClick={() => setSelectedAgent(null)}\r\n            >\r\n              <div className=\"p-3 min-w-64\">\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <h3 className=\"font-bold text-sm\">Agent {selectedAgent.name}</h3>\r\n                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                    selectedAgent.status === 'available' ? 'bg-green-100 text-green-800' :\r\n                    selectedAgent.status === 'busy' ? 'bg-yellow-100 text-yellow-800' :\r\n                    'bg-gray-100 text-gray-800'\r\n                  }`}>\r\n                    {selectedAgent.status}\r\n                  </span>\r\n                </div>\r\n                \r\n                <div className=\"space-y-1 text-xs text-gray-600\">\r\n                  <p><strong>Badge:</strong> {selectedAgent.badge_number}</p>\r\n                  <p><strong>Phone:</strong> {selectedAgent.phone}</p>\r\n                  <p><strong>Vehicle:</strong> {selectedAgent.vehicle_info || 'Not specified'}</p>\r\n                  \r\n                  {selectedAgent.id === sosAlert?.assigned_agent_id && (\r\n                    <div className=\"mt-2 p-2 bg-red-50 rounded border-l-4 border-red-400\">\r\n                      <p className=\"text-red-700 font-bold text-xs\">🚨 Assigned to your SOS</p>\r\n                      {directions && (\r\n                        <div className=\"mt-1 text-xs\">\r\n                          <p>Distance: {directions.routes[0]?.legs[0]?.distance?.text}</p>\r\n                          <p>ETA: {directions.routes[0]?.legs[0]?.duration_in_traffic?.text || \r\n                            directions.routes[0]?.legs[0]?.duration?.text}</p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </InfoWindow>\r\n          )}\r\n\r\n          {/* Main route */}\r\n          {directions && showDirections && (\r\n            <DirectionsRenderer\r\n              directions={directions}\r\n              routeIndex={0}\r\n              options={{\r\n                polylineOptions: {\r\n                  strokeColor: '#ef4444',\r\n                  strokeWeight: 6,\r\n                  strokeOpacity: 0.8\r\n                },\r\n                suppressMarkers: true,\r\n                preserveViewport: false\r\n              }}\r\n            />\r\n          )}\r\n\r\n          {/* Alternative routes */}\r\n          {alternativeRoutes.slice(1).map((route, index) => (\r\n            <DirectionsRenderer\r\n              key={`alt-route-${index}`}\r\n              directions={{\r\n                ...directions,\r\n                routes: [route.route]\r\n              }}\r\n              options={{\r\n                polylineOptions: {\r\n                  strokeColor: '#6b7280',\r\n                  strokeWeight: 3,\r\n                  strokeOpacity: 0.5\r\n                },\r\n                suppressMarkers: true,\r\n                preserveViewport: true\r\n              }}\r\n            />\r\n          ))}\r\n\r\n          {/* Traffic Layer */}\r\n          {showTraffic && <TrafficLayer />}\r\n        </GoogleMap>\r\n      </LoadScript>\r\n\r\n      {/* Map legend */}\r\n      <div className=\"absolute top-2 right-2 bg-white p-2 rounded-lg shadow-lg text-xs\">\r\n        <div className=\"flex items-center gap-1 mb-1\">\r\n          <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\r\n          <span>Your Location</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-1 mb-1\">\r\n          <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\r\n          <span>Available Agent</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-1 mb-1\">\r\n          <div className=\"w-3 h-3 bg-amber-500 rounded-full\"></div>\r\n          <span>Busy Agent</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-1\">\r\n          <div className=\"w-3 h-3 bg-red-500 rounded-full border-2 border-white\"></div>\r\n          <span>Assigned Agent</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Loading overlay */}\r\n      {!isLoaded && (\r\n        <div className=\"absolute inset-0 bg-gray-100 rounded-lg flex items-center justify-center\">\r\n          <div className=\"text-center\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-red-600 mx-auto mb-2\"></div>\r\n            <p className=\"text-sm text-gray-600\">Loading map...</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveTrackingMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}